name: Deploy Testes

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build project
        run: mvn clean install -DskipTests

      - name: Login Docker Hub
        run: echo "${{secrets.DOCKER_TOKEN}}" | docker login -u ${{secrets.DOCKER_USERNAME}} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{secrets.DOCKER_USERNAME}}/luisaoproject-0.0.1:latest .

      - name: Push image docker
        run: docker push ${{secrets.DOCKER_USERNAME}}/luisaoproject-0.0.1:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Setup environment
        run: |
          echo DATABASE_USERNAME=${{secrets.DATABASE_USERNAME}} >> .env
          echo DATABASE_PASSWORD='${{secrets.DATABASE_PASSWORD}}' >> .env
          echo DATABASE_URL=${{secrets.DATABASE_URL}} >> .env
          echo DOCKER_USERNAME=${{secrets.DOCKER_USERNAME}} >> .env
          echo JWT_KEY=${{secrets.JWT_KEY}} >> .env
          echo MAIL_PASSWORD=${{secrets.MAIL_PASSWORD}} >> .env
          echo MAIL_USERNAME=${{secrets.MAIL_USERNAME}} >> .env
          echo APP_BASE_EMAIL_URL=${{secrets.APP_BASE_EMAIL_URL}} >> .env

      - name: Pull image from Docker Hub
        run: docker pull ${{secrets.DOCKER_USERNAME}}/luisaoproject-0.0.1:latest

      - name: Stop and remove existing container
        run: docker rm -f luisaoproject || true

      - name: Run Docker container
        run: docker run -d -p 8080:8080 --env-file .env --name luisaoproject ${{secrets.DOCKER_USERNAME}}/luisaoproject-0.0.1:latest
